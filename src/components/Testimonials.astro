---
import TestimonialCard from "@components/ui/TestimonialCard.astro";
import testimonialsData from "@data/testimonials";

// Calcula el promedio de calificaciones y el total de reseñas
const totalReviews = testimonialsData.length;
const averageRating = (
  testimonialsData.reduce((sum, review) => sum + review.rating, 0) /
  totalReviews
).toFixed(1);
---

<section id="testimonials" class="py-16 bg-slate-50">
  <!--  SCRIPT DE SCHEMA AGGREGATE RATING (JSON-LD) -->
  <script
    type="application/ld+json"
    set:html={JSON.stringify({
      "@context": "https://schema.org",
      "@type": "AggregateRating",
      itemReviewed: {
        "@type": "Organization",
        name: "VetAriel",
      },
      ratingValue: averageRating,
      reviewCount: totalReviews,
      bestRating: "5",
      worstRating: "1",
    })}
  />

  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="text-center mb-12">
      <h2 class="text-3xl md:text-4xl font-bold text-blue-900 mb-4">
        Lo que Dicen Nuestros Clientes
      </h2>
      <p class="text-xl text-slate-700">
        Historias reales de nuestros clientes satisfechos y sus queridas
        mascotas.
      </p>
    </div>

    <div id="testimonials-container" class="relative">
      <div
        id="testimonials-wrapper"
        class="max-h-[26rem] md:max-h-[22rem] overflow-hidden transition-all duration-700 ease-in-out"
      >
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {
            testimonialsData.map((testimonial) => (
              <TestimonialCard {...testimonial} />
            ))
          }
        </div>
      </div>
      <!-- div que contiene el efecto de "fade" y el botón "Ver más". -->
      <div
        id="fade-and-button-container"
        class="transition-opacity duration-300"
      >
        <!-- `from-gray-50` es el color de fondo, `via-gray-50/90` es semitransparente -->
        <!-- `to-transparent` es totalmente transparente. -->
        <div
          class="absolute inset-x-0 bottom-0 h-48 bg-gradient-to-t from-slate-50 via-slate-50/90 to-transparent pointer-events-none"
        >
        </div>

        <!-- boton de ver mas -->
        <div class="absolute bottom-6 left-1/2 -translate-x-1/2">
          <button
            id="show-more-btn"
            type="button"
            class="bg-orange-500 text-white hover:bg-orange-600 font-semibold py-3 px-6 rounded-lg shadow-lgfocus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-orange-500 transition-transform hover:scale-105"
          >
            Ver más reseñas
          </button>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  const wrapper = document.getElementById("testimonials-wrapper");
  const fadeAndButton = document.getElementById("fade-and-button-container");
  const button = document.getElementById("show-more-btn");

  // Cuando se haga clic, se ejecutará la función.
  button.addEventListener("click", () => {
    // Eliminamos la restricción de altura del contenedor de reseñas.
    wrapper.style.maxHeight = "none";

    // Ocultamos el degradado y el botón.
    // Lo hacemos cambiando su opacidad a 0. La transición CSS se encarga de la animación.
    fadeAndButton.style.opacity = "0";

    // Para evitar que el botón (aunque invisible) pueda ser clickeado,
    // lo desactivamos después de la animación de opacidad.
    setTimeout(() => {
      fadeAndButton.style.pointerEvents = "none";
    }, 300);
  });
</script>
