---
import PromotionCard from "@components/ui/PromotionCard.astro";
import ArrowLeftIcon from "@assets/icons/arrowLeft.svg";
import ArrowRightIcon from "@assets/icons/arrowRight.svg";

const promociones = [
  {
    id: "vacunacion",
    discount: "30%",
    colorBadge: "bg-red-500",
    title: "Paquete de Vacunación",
    services: [
      "Serie completa de vacunas",
      "Examen de salud general",
      "Prevención de parásitos",
      "Consulta nutricional",
    ],
    expirationDate: "31 de Diciembre, 2025",
    dateISO: "2025-12-31",
  },
  {
    id: "cuidado-dental",
    discount: "25%",
    colorBadge: "bg-green-500",
    title: "Especial Cuidado Dental",
    services: [
      "Limpieza dental profesional",
      "Radiografías dentales",
      "Evaluación de salud oral",
      "Instrucciones de cuidado en casa",
    ],
    expirationDate: "15 de Julio, 2025",
    dateISO: "2025-07-15",
  },
  {
    id: "nueva-mascota",
    discount: "40%",
    colorBadge: "bg-blue-500",
    title: "Bienvenida Nueva Mascota",
    services: [
      "Primera consulta gratuita",
      "Vacunas básicas",
      "Desparasitaciones iniciales",
      "Kit de cuidados básicos",
    ],
    expirationDate: "28 de Julio, 2025",
    dateISO: "2025-07-28",
  },
  {
    id: "mascota-senior",
    discount: "20%",
    colorBadge: "bg-purple-500",
    title: "Cuidado Mascota Senior",
    services: [
      "Análisis de sangre completo",
      "Evaluación de salud articular",
      "Exámenes de vista y oído",
      "Plan nutricional personalizado",
    ],
    expirationDate: "31 de Julio, 2025",
    dateISO: "2025-07-31",
  },
];
---

<section
  class="py-16 bg-gradient-to-br from-[#f0fdfa] to-[#eff6ff] opacity-0 translate-y-8 transition-all duration-700 ease-out"
  id="promotions"
>
  <div class="max-w-7xl mx-auto overflow-hidden">
    <div class="px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-12">
        <h2 class="text-3xl md:text-4xl font-bold text-teal-700 mb-4">
          Promociones actuales
        </h2>
        <p class="text-xl text-gray-600">
          Porque su salud también merece una promoción.
        </p>
      </div>
    </div>

    <div class="embla relative px-4 sm:px-6 lg:px-8">
      <div class="embla__viewport -mx-4 overflow-hidden">
        <div class="embla__container flex">
          {
            promociones.map((promo) => (
              <div class="embla__slide flex-[0_0_85%] sm:flex-[0_0_50%] lg:flex-[0_0_33.333%] pl-4">
                <PromotionCard
                  id={promo.id}
                  discount={promo.discount}
                  colorBadge={promo.colorBadge}
                  title={promo.title}
                  services={promo.services}
                  expirationDate={promo.expirationDate}
                  dateISO={promo.dateISO}
                />
              </div>
            ))
          }
        </div>
      </div>

      <button
        class="embla__prev absolute top-1/2 -translate-y-1/2 left-[-0.5rem] md:left-[-1rem] bg-white rounded-full p-2 shadow-lg disabled:opacity-30"
      >
        <ArrowLeftIcon class="w-6 h-6 text-teal-600" />
      </button>
      <button
        class="embla__next absolute top-1/2 -translate-y-1/2 right-[-0.5rem] md:right-[-1rem] bg-white rounded-full p-2 shadow-lg disabled:opacity-30"
      >
        <ArrowRightIcon class="w-6 h-6 text-teal-600" />
      </button>
    </div>
  </div>
</section>

<script>
  //Igual que en la seccion de doctores, alli deje los comentarios explicando el proceso
  import EmblaCarousel from "embla-carousel";

  document.addEventListener("DOMContentLoaded", () => {
    const promotionSection = document.getElementById("promotions");
    if (!promotionSection) return;

    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.remove("opacity-0", "translate-y-8");

            const slides = entry.target.querySelectorAll(
              ".promotion-slide-content"
            );
            slides.forEach((slide, index) => {
              setTimeout(() => {
                slide.classList.remove("opacity-0", "translate-y-4");
              }, 150 * index);
            });

            observer.unobserve(entry.target);
          }
        });
      },
      { threshold: 0.4 }
    );

    observer.observe(promotionSection);

    const emblaNode = promotionSection.querySelector(".embla");
    if (emblaNode) {
      const viewportNode = emblaNode.querySelector(
        ".embla__viewport"
      ) as HTMLElement;
      const prevBtn = emblaNode.querySelector(
        ".embla__prev"
      ) as HTMLButtonElement;
      const nextBtn = emblaNode.querySelector(
        ".embla__next"
      ) as HTMLButtonElement;

      if (viewportNode && prevBtn && nextBtn) {
        const emblaApi = EmblaCarousel(viewportNode, {
          loop: false,
          align: "start",
        });

        function updateButtons() {
          prevBtn.disabled = !emblaApi.canScrollPrev();
          nextBtn.disabled = !emblaApi.canScrollNext();
        }

        prevBtn.addEventListener("click", () => emblaApi.scrollPrev(), false);
        nextBtn.addEventListener("click", () => emblaApi.scrollNext(), false);

        emblaApi.on("select", updateButtons);
        emblaApi.on("init", updateButtons);
      }
    }
  });
</script>
